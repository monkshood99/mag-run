'use strict';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};/**
 * Edit type: Select2 - Dropdown
 *
 * @since 1.0
 */jQuery.fn.cacie_edit_select2_dropdown=function(column,item){var $=jQuery;var column_editable=item.columndata[column.column_name];var options=column.editable.options;var el=$(this);// populate options from object
var defaults={type:'ac_select2',showbuttons:true,source:cacie_options_format_editable(options),select2:{width:'230px'}};// populate options by ajax
if(column.editable.ajax_populate){var _args={formatted_value:column_editable.formattedvalue,source:'',showbuttons:false,select2:{width:230,minimumInputLength:0,escapeMarkup:function escapeMarkup(text){return $('<div>'+text+'</div>').text()},ajax:{url:ajaxurl,dataType:'json',quietMillis:100,data:function data(params){return{action:'acp_editing_get_options',layout:AC.layout,searchterm:params.term,page:params.page,column:column.column_name,list_screen:AC.list_screen,item_id:item.ID,_ajax_nonce:AC.ajax_nonce}},processResults:function processResults(response){if(response.success){return response.data}// Close Select2 dropdown
el.data('editable').input.$input.find('select').select2('close');// Output error
el.data('editable').container.$form.editableform('error',response.data);return{results:[]}}}}};defaults=$.extend(defaults,_args)}if(typeof column.editable.multiple!=='undefined'&&column.editable.multiple){defaults.select2.multiple=true;defaults.showbuttons=true}$(this).cacie_xeditable(defaults,column,item);if(typeof column.editable.ajax_populate!=='undefined'&&column.editable.ajax_populate){$(this).on('shown',function(){var inp=el.data('editable').input.$input.find('select');inp.on('change',function(){column_editable.formattedvalue=[];var currentdata=inp.select2('data');if(typeof currentdata.id!=='undefined'){column_editable.formattedvalue[currentdata.id]=currentdata.text}else{for(var i in currentdata){if(currentdata.hasOwnProperty(i)){column_editable.formattedvalue[currentdata[i].id]=currentdata[i].text}}}})})}};// xEditable AC Select2
(function($){'use strict';var ACP_Select2_Input=function ACP_Select2_Input(options){this.init('ac_select2',options,ACP_Select2_Input.defaults)};$.fn.editableutils.inherit(ACP_Select2_Input,$.fn.editabletypes.abstractinput);$.extend(ACP_Select2_Input.prototype,{render:function render(){var $container=this.$input;var $select=$container.find('select');var options=this.options.source;var formatted_values=this.options.formatted_value;if(formatted_values){Object.keys(formatted_values).forEach(function(key){var text=formatted_values[key];$select.append('<option value="'+key+'">'+text+'</option>')})}if(options){options.forEach(function(option){$select.append('<option value="'+option.value+'">'+option.text+'</option>')})}if(this.options.select2.multiple){$container.find('select').prop('multiple',true);$container.find('select option').prop('selected',false)}if(!this.options.showbuttons){$select.on('change',function(){$container.parents('form:first').submit()})}},value2input:function value2input(value){var s2_options=this.options.select2;var $container=this.$input;s2_options.theme='acs2';if((typeof value==='undefined'?'undefined':_typeof(value))==='object'){value.forEach(function(v){$container.find('select').find('option[value="'+v+'"]').prop('selected',true)})}$container.find('select').ac_select2(s2_options)},input2value:function input2value(){return this.$input.find('[name=\'ac_input_text\']').val()}});var template='\n\t\t<div class="single-input">\n\t\t\t<select type="text" name="ac_input_text"></select>\n\t\t</div>\n\t';ACP_Select2_Input.defaults=$.extend({},$.fn.editabletypes.abstractinput.defaults,{tpl:template,select2:{},source:{},formatted_value:{}});$.fn.editabletypes.ac_select2=ACP_Select2_Input})(window.jQuery);